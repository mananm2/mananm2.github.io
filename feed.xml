<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="https://shivanikamtikar.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://shivanikamtikar.github.io/" rel="alternate" type="text/html" hreflang="en" /><updated>2022-06-13T15:54:35+00:00</updated><id>https://shivanikamtikar.github.io/feed.xml</id><title type="html">blank</title><subtitle></subtitle><entry><title type="html">Github Metadata</title><link href="https://shivanikamtikar.github.io/2020/09/28/github-metadata.html" rel="alternate" type="text/html" title="Github Metadata" /><published>2020-09-28T00:00:00+00:00</published><updated>2020-09-28T00:00:00+00:00</updated><id>https://shivanikamtikar.github.io/2020/09/28/github-metadata</id><content type="html" xml:base="https://shivanikamtikar.github.io/2020/09/28/github-metadata.html"><![CDATA[<p>layout: post
title:  a post with github metadata
date: 2020-09-28 21:01:00
description: a quick run down on accessing github metadata.
categories: sample-posts external-services
—
&lt;!– —
A sample blog page that demonstrates the accessing of github meta data.</p>

<h2 id="what-does-github-metadata-do">What does Github-MetaData do?</h2>
<ul>
  <li>Propagates the site.github namespace with repository metadata</li>
  <li>Setting site variables :
    <ul>
      <li>site.title</li>
      <li>site.description</li>
      <li>site.url</li>
      <li>site.baseurl</li>
    </ul>
  </li>
  <li>Accessing the metadata - duh.</li>
  <li>Generating edittable links.</li>
</ul>

<h2 id="additional-reading">Additional Reading</h2>
<ul>
  <li>If you’re recieving incorrect/missing data, you may need to perform a Github API<a href="https://github.com/jekyll/github-metadata/blob/master/docs/authentication.md"> authentication</a>.</li>
  <li>Go through this <a href="https://jekyll.github.io/github-metadata/">README</a> for more details on the topic.</li>
  <li><a href="https://github.com/jekyll/github-metadata/blob/master/docs/site.github.md">This page</a> highlights all the feilds you can access with github-metadata.
<br /></li>
</ul>

<h2 id="example-metadata">Example MetaData</h2>
<ul>
  <li>Host Name :</li>
  <li>URL :</li>
  <li>BaseURL :</li>
  <li>Archived :</li>
  <li>Contributors :</li>
</ul>

<p>–&gt;</p>]]></content><author><name></name></author><summary type="html"><![CDATA[layout: post title: a post with github metadata date: 2020-09-28 21:01:00 description: a quick run down on accessing github metadata. categories: sample-posts external-services — &lt;!– — A sample blog page that demonstrates the accessing of github meta data. What does Github-MetaData do? Propagates the site.github namespace with repository metadata Setting site variables : site.title site.description site.url site.baseurl Accessing the metadata - duh. Generating edittable links. Additional Reading If you’re recieving incorrect/missing data, you may need to perform a Github API authentication. Go through this README for more details on the topic. This page highlights all the feilds you can access with github-metadata. Example MetaData Host Name : URL : BaseURL : Archived : Contributors : –&gt;]]></summary></entry><entry><title type="html">Twitter</title><link href="https://shivanikamtikar.github.io/2020/09/28/twitter.html" rel="alternate" type="text/html" title="Twitter" /><published>2020-09-28T00:00:00+00:00</published><updated>2020-09-28T00:00:00+00:00</updated><id>https://shivanikamtikar.github.io/2020/09/28/twitter</id><content type="html" xml:base="https://shivanikamtikar.github.io/2020/09/28/twitter.html"><![CDATA[<p>layout: post
title: a post with twitter
date: 2020-09-28 11:12:00-0400
description: an example of a blog post with twitter
tags: formatting
categories: sample-posts external-services
—
&lt;!– —
A sample blog page that demonstrates the inclusion of Tweets/Timelines/etc.</p>

<h1 id="tweet">Tweet</h1>
<p>An example of displaying a tweet:</p>
<div class="jekyll-twitter-plugin"><blockquote class="twitter-tweet"><p lang="sv" dir="ltr">jekyll-twitter-plugin (1.0.0): A Liquid tag plugin for Jekyll that renders Tweets from Twitter API <a href="http://t.co/m4EIQPM9h4">http://t.co/m4EIQPM9h4</a></p>&mdash; RubyGems (@rubygems) <a href="https://twitter.com/rubygems/status/518821243320287232?ref_src=twsrc%5Etfw">October 5, 2014</a></blockquote>
<script async="" src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</div>

<h1 id="timeline">Timeline</h1>
<p>An example of pulling from a timeline:</p>
<div class="jekyll-twitter-plugin"><a class="twitter-timeline" data-width="500" data-tweet-limit="3" href="https://twitter.com/jekyllrb?ref_src=twsrc%5Etfw">Tweets by jekyllrb</a>
<script async="" src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</div>

<h1 id="additional-details">Additional Details</h1>
<p>For more details on using the plugin visit: <a href="https://github.com/rob-murray/jekyll-twitter-plugin">jekyll-twitter-plugin</a>
 –&gt;</p>]]></content><author><name></name></author><summary type="html"><![CDATA[layout: post title: a post with twitter date: 2020-09-28 11:12:00-0400 description: an example of a blog post with twitter tags: formatting categories: sample-posts external-services — &lt;!– — A sample blog page that demonstrates the inclusion of Tweets/Timelines/etc. Tweet An example of displaying a tweet: jekyll-twitter-plugin (1.0.0): A Liquid tag plugin for Jekyll that renders Tweets from Twitter API http://t.co/m4EIQPM9h4&mdash; RubyGems (@rubygems) October 5, 2014 Timeline An example of pulling from a timeline: Tweets by jekyllrb Additional Details For more details on using the plugin visit: jekyll-twitter-plugin –&gt;]]></summary></entry><entry><title type="html">Comments</title><link href="https://shivanikamtikar.github.io/2015/10/20/comments.html" rel="alternate" type="text/html" title="Comments" /><published>2015-10-20T00:00:00+00:00</published><updated>2015-10-20T00:00:00+00:00</updated><id>https://shivanikamtikar.github.io/2015/10/20/comments</id><content type="html" xml:base="https://shivanikamtikar.github.io/2015/10/20/comments.html"><![CDATA[<p>layout: post
title: a post with comments
date: 2015-10-20 11:59:00-0400
description: an example of a blog post with comments
comments: true
categories: sample-posts external-services
—
<!-- ---
This post shows how to add DISQUS comments.
 --></p>]]></content><author><name></name></author><summary type="html"><![CDATA[layout: post title: a post with comments date: 2015-10-20 11:59:00-0400 description: an example of a blog post with comments comments: true categories: sample-posts external-services —]]></summary></entry><entry><title type="html">Math</title><link href="https://shivanikamtikar.github.io/2015/10/20/math.html" rel="alternate" type="text/html" title="Math" /><published>2015-10-20T00:00:00+00:00</published><updated>2015-10-20T00:00:00+00:00</updated><id>https://shivanikamtikar.github.io/2015/10/20/math</id><content type="html" xml:base="https://shivanikamtikar.github.io/2015/10/20/math.html"><![CDATA[<p>layout: post
title: a post with math
date: 2015-10-20 11:12:00-0400
description: an example of a blog post with some math
tags: formatting math
categories: sample-posts
—
&lt;!– —
This theme supports rendering beautiful math in inline and display modes using <a href="https://www.mathjax.org/">MathJax 3</a> engine. You just need to surround your math expression with <code class="language-plaintext highlighter-rouge">$$</code>, like <code class="language-plaintext highlighter-rouge">$$ E = mc^2 $$</code>. If you leave it inside a paragraph, it will produce an inline expression, just like \(E = mc^2\).</p>

<p>To use display mode, again surround your expression with <code class="language-plaintext highlighter-rouge">$$</code> and place it as a separate paragraph. Here is an example:</p>

\[\sum_{k=1}^\infty |\langle x, e_k \rangle|^2 \leq \|x\|^2\]

<p>You can also use <code class="language-plaintext highlighter-rouge">\begin{equation}...\end{equation}</code> instead of <code class="language-plaintext highlighter-rouge">$$</code> for display mode math.
MathJax will automatically number equations:</p>

<p>\begin{equation}
\label{eq:caushy-shwarz}
\left( \sum_{k=1}^n a_k b_k \right)^2 \leq \left( \sum_{k=1}^n a_k^2 \right) \left( \sum_{k=1}^n b_k^2 \right)
\end{equation}</p>

<p>and by adding <code class="language-plaintext highlighter-rouge">\label{...}</code> inside the equation environment, we can now refer to the equation using <code class="language-plaintext highlighter-rouge">\eqref</code>.</p>

<p>Note that MathJax 3 is <a href="https://docs.mathjax.org/en/latest/upgrading/whats-new-3.0.html">a major re-write of MathJax</a> that brought a significant improvement to the loading and rendering speed, which is now <a href="http://www.intmath.com/cg5/katex-mathjax-comparison.php">on par with KaTeX</a>.
 –&gt;</p>]]></content><author><name></name></author><summary type="html"><![CDATA[layout: post title: a post with math date: 2015-10-20 11:12:00-0400 description: an example of a blog post with some math tags: formatting math categories: sample-posts — &lt;!– — This theme supports rendering beautiful math in inline and display modes using MathJax 3 engine. You just need to surround your math expression with $$, like $$ E = mc^2 $$. If you leave it inside a paragraph, it will produce an inline expression, just like \(E = mc^2\).]]></summary></entry><entry><title type="html">Code</title><link href="https://shivanikamtikar.github.io/2015/07/15/code.html" rel="alternate" type="text/html" title="Code" /><published>2015-07-15T00:00:00+00:00</published><updated>2015-07-15T00:00:00+00:00</updated><id>https://shivanikamtikar.github.io/2015/07/15/code</id><content type="html" xml:base="https://shivanikamtikar.github.io/2015/07/15/code.html"><![CDATA[<p>layout: post
title: a post with code
date: 2015-07-15 15:09:00
description: an example of a blog post with some code
tags: formatting code
categories: sample-posts
—</p>

<!-- ---
This theme implements a built-in Jekyll feature, the use of Rouge, for syntax highlighting.
It supports more than 100 languages.
This example is in C++.
All you have to do is wrap your code in a liquid tag:


{% highlight c++ linenos %}  <br/> code code code <br/> {% endhighlight %}


The keyword `linenos` triggers display of line numbers.
Produces something like this:


<figure class="highlight"><pre><code class="language-c--" data-lang="c++"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
</pre></td><td class="code"><pre><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="k">const</span> <span class="err">\</span><span class="o">*</span><span class="n">argv</span><span class="p">[])</span>
<span class="p">{</span>
    <span class="n">string</span> <span class="n">myString</span><span class="p">;</span>

    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"input a string: "</span><span class="p">;</span>
    <span class="n">getline</span><span class="p">(</span><span class="n">cin</span><span class="p">,</span> <span class="n">myString</span><span class="p">);</span>
    <span class="kt">int</span> <span class="n">length</span> <span class="o">=</span> <span class="n">myString</span><span class="p">.</span><span class="n">length</span><span class="p">();</span>

    <span class="kt">char</span> <span class="n">charArray</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">char</span> <span class="o">*</span> <span class="p">[</span><span class="n">length</span><span class="p">];</span>

    <span class="n">charArray</span> <span class="o">=</span> <span class="n">myString</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">length</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">){</span>
        <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">charArray</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&lt;&lt;</span> <span class="s">" "</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>

 -->]]></content><author><name></name></author><summary type="html"><![CDATA[layout: post title: a post with code date: 2015-07-15 15:09:00 description: an example of a blog post with some code tags: formatting code categories: sample-posts —]]></summary></entry></feed>